:root {
  /* Color */
  --white-color: #fff;
  --black-color: #140a00;
  --blue-color: #045fd4;
  --red-color: #ff0000;
  --grey-dark-color: #909090;
  --grey-light-color: #e0e0e0;
  /* Size */
  --padding: 12px;
  --avatar-size: 36px;
  /* Font Size*/
  --font-large: 18px;
  --font-medium: 14px;
  --font-small: 12px;
  --font-micro: 10px;
}

* {
  padding: 0;
  margin: 0;
  box-sizing: border-box;
}

body {
  font-family: "Roboto", sans-serif;
}

ul {
  list-style-type: none;
}

button,
button:focus {
  border: none;
  cursor: pointer;
  outline: none;
  /* 버튼의 배경없애기 */
}
/* header */
header {
  display: flex;
  /* 가로정렬 */
  justify-content: space-between;
  /* 플렉스 요소는 요소들 사이에만 여유 공간을 두고 배치됩니다. */
  padding: var(--padding);
  background-color: var(--black-color);
  color: var(--white-color);
}

header .logo {
  font-size: var(--font-large);
}

header .logo i {
  color: var(--red-color);
}

header .icons .fa-search {
  margin-right: var(--padding);
}
.player {
  position: sticky;
  /* 고정되어서 따라가게 하고싶을때 사용한다. */
  top: 0;
  /* top 0을 한 이유는 고정되었을때 위치를 지정해줌 */
  text-align: center;
  background-color: var(--black-color);
}

/* Video Player */
.player video {
  width: 100%;
  height: 100%;
  /* 반응형으로 만들때는 width와 height를 퍼센테이지로 주면쉽다 */
  max-width: 1000px;
}

.info {
  padding: var(--padding);
}

.info .metadata .hashtags {
  display: flex;
  font-size: var(--font-small);
  color: var(--blue-color);
}

.info .metadata .hashtags li {
  margin-right: var(--padding);
}

/* 적용할때는 범위를 최대한 작게 작게 적용해주는것이 좋다 */

.info .metadata .titleAndButton {
  display: flex;
}
.info .metadata .titleAndButton .title {
  font-size: var(--font-medium);
  display: -webkit-box;
  -webkit-box-orient: vertical;
  -webkit-line-clamp: 2;
  overflow: hidden;
  margin-right: var(--padding);
}

.info .metadata .titleAndButton .moreBtn {
  height: 100%;
}

.info .views {
  font-size: var(--font-small);
  color: var(--grey-dark-color);
}

/* Action Buttons */
.actions {
  display: flex;
  justify-content: space-around;
  margin: var(--padding) 0;
}

.actions button {
  display: flex;
  flex-direction: column;
  /* flex-direction CSS 속성은 플렉스 컨테이너 내의 아이템을 배치할 때 사용할 주축 및 방향(정방향, 역방향)을 지정합니다 */
  font-size: var(--font-small);
}

.actions button i {
  /* margin: 0 auto; */
  margin: calc/(var(--pading)) / 2;
}
